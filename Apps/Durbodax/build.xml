<?xml version="1.0"?>

<project name="Generic Build File" default="test" basedir=".">

  <description>
 This project file will compile source and test files, run tests and
 build distribution archives: executable, source and documentation.

 Your application and test source code must be in the directory "src".
 The names of test classes must contain the word "TEST".

 Edit "build.properties" to set the distribution and executable names.

 To build the project, type "ant [target]", where "[target]" is chosen
 from the list below.  The default target is "test".
  </description>

  <!--
    ========================================================================
    Property file
    Must define those things checked by "properties.ok" in "initbuild"
    ========================================================================
  -->
  <property file="build.properties" />
  <!-- Defaults, if not set in build.properties -->
  <property name="project.name" value="project" />
  <property name="main.name" value="Main" />
  <property name="resource.pat" value="resources/**/*" />
  <property name="source.version" value="${ant.java.version}" />
  <property name="compiler.args" value="-Xlint" />


  <!--
    ========================================================================
    Defined properties
    ========================================================================
  -->
  <!-- test pattern -->
  <property name="test.pat" value="**/*Test*" />
  <property name="notest.pat" value="**/*CommandPrompt$Test*" />
  <property name="notest2.pat" value="**/*PromptTest*" />

  <!-- source directory -->
  <property name="src.app"  value="src" />
  <property name="src.test" value="tests" />

  <!-- external library directory -->
  <property name="xtr.dir" value="extra" />

  <!-- external library directory -->
  <property name="lib.dir"  value="lib" />

  <!-- build directory -->
  <property name="bld.dir"     value="bin" />
  <property name="bld.app"     value="${bld.dir}/classes" />
  <property name="bld.test"    value="${bld.dir}/classes" />
  <property name="bld.dep"     value="${bld.dir}/dependencies" />
  <property name="bld.doc.pub" value="${bld.dir}/doc-public" />
  <property name="bld.doc.prv" value="${bld.dir}/doc-private" />

  <!-- distribution directory -->
  <property name="dst.dir"  value="${bld.dir}" />
  <property name="app.jar"  value="${dst.dir}/${project.name}" />
  <property name="src.zip"  value="${dst.dir}/${project.name}-src" />
  <property name="doc.zip"  value="${dst.dir}/${project.name}-doc" />

  <!-- test result directory -->
  <property name="report.dir" value="." />

  <!-- include/exclude patterns -->
  <property name="exclude.pat"
            value="**/OLD/**,**/*-*/**,**/*~,**/*.bak" />
  <property name="src.include.pat"
            value="build.*,Build.*,BUILD.*,${xtr.dir}/**/*,${src.app}/${resource.pat},${src.app}/**/*.java,${src.app}/**/*.Java,${src.app}/**/*.JAVA,${src.test}/**/*.java,${src.test}/**/*.Java,${src.test}/**/*.JAVA,${lib.dir}/**/*.jar" />
  <property name="src.exclude.pat"
            value="${bld.dir}/**,${exclude.pat},**/*.class,**/*.zip" />

 
  <!--
    ========================================================================
    Initialize directories and paths
    ========================================================================
  -->
  <target name="initbuild">
    <echo>Type "ant -projecthelp" for help</echo>
    <echo>The following values may be set in the file build.properties:</echo>
    <echo>  project.name   = ${project.name}</echo>
    <echo>  main.name      = ${main.name}</echo>
    <echo>  resource.pat   = ${resource.pat}</echo>
    <echo>  source.version = ${source.version}</echo>
    <echo>  compiler.args  = ${compiler.args}</echo>
    
    <!-- see if ${src.zip}.zip should be recreated -->
    <uptodate property="src.uptodate" targetfile="${src.zip}.zip" >
      <srcfiles dir="."
                includes="${src.include.pat}"
                excludes="${src.exclude.pat}"
      />
    </uptodate>

    <!-- create directories -->
    <mkdir dir="${bld.dir}" />
    <mkdir dir="${bld.app}" />
    <mkdir dir="${bld.test}" />
    <mkdir dir="${dst.dir}" />

    <!-- set paths -->
    <path id="class.path.base">
      <fileset dir="."
        includes="${lib.dir}/**/*.jar"
      />
      <pathelement path="${java.class.path}" />
    </path>
    <path id="class.path.app">
      <pathelement location="${app.jar}.jar" />
      <path refid="class.path.base" />
    </path>
    <path id="class.path.test">
      <pathelement location="${bld.test}" />
      <path refid="class.path.app" />
    </path>

    <!-- verify dependencies -->
    <depend
       srcdir="${src.app}"
       destdir="${bld.app}"
       cache="${bld.dep}"
       closure="yes"
    />
  </target>


  <!--
    ========================================================================
    Compile application
    ========================================================================
  -->
  <target name="compile" depends="initbuild"
          description="compiles the application class files">
    <javac
       srcdir="${src.app}"
       destdir="${bld.app}"
       excludes="${exclude.pat},${test.pat}"
       source="${source.version}"
       deprecation="on"
       debug="on"
      >
      <compilerarg value="${compiler.args}"/>
      <classpath refid="class.path.base" />
    </javac>
    <copy todir="${bld.app}" >
      <fileset dir="${src.app}"
        includes="${resource.pat}"
      />
    </copy>
    <copy todir="${bld.dir}/lib">
    	<fileset dir="lib"/>
    </copy>
 </target>

  <!--
    ========================================================================
    Build executable distribution
    ========================================================================
  -->
  <target name="jar" depends="compile"
          description="builds the distribution executable jar file -- does not include tests">
    <jar
       destfile="${app.jar}.jar"
       basedir="${bld.app}"
	>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Main-Class" value="${main.name}"/>
	<attribute name="Class-Path" value="lib/derbyclient.jar lib/derbyclient.jar lib/derby.jar"/>
      </manifest>
    </jar>
  </target>

  <!--
    ========================================================================
    Compile and run tests
    ========================================================================
  -->
  <target name="test" depends="jar"
          description="compiles and runs the test class files">
    <echo>Using compilerarg value="${compiler.args}"</echo>
    <javac
       srcdir="${src.test}"
       destdir="${bld.test}"
       includes="${test.pat}"
       excludes="${exclude.pat}"
       source="${source.version}"
       deprecation="on"
       debug="on"
      >
      <compilerarg value="${compiler.args}"/>
      <classpath refid="class.path.app" />
    </javac>
    <junit
       haltonerror="off"
       haltonfailure="off"
       failureproperty="failed.tests"
       fork="on"
      >
      <classpath refid="class.path.test" />
      <formatter type="brief" usefile="no" />
      <batchtest todir="${report.dir}">
        <!-- exclude classes nested inside the test classes -->
        <fileset dir="${bld.test}"
           includes="${test.pat}"
           excludes="${test.pat}$$*,${notest.pat},${notest2.pat}"
          />
      </batchtest>
    </junit>
    <fail message="One or more unit tests failed!" if="failed.tests" />
  </target>
  
 
  <!--
    ========================================================================
    Build distribution
    ========================================================================
  -->
  <target name="dist" depends="jar"
          description="builds all distribution files">
  </target>

  <!--
    ========================================================================
    Remove class and backup files
    ========================================================================
  -->
  <target name="clean"
          description="removes class files and backup files">
    <delete>
      <fileset dir="."
        includes="**/*.bak,**/*\~,**/*.class"
      />
    </delete>
  </target>

  <!--
    ========================================================================
    Remove distribution files and build directory
    ========================================================================
  -->
  <target name="veryclean" depends="clean"
          description="removes distribution files and build directory">
    <delete dir="${bld.dir}" />
    <delete file="${app.jar}.jar" />
    <delete file="${doc.zip}" />
    <delete file="${src.zip}.zip" />
  </target>

  <!--
    ========================================================================
    Build a version with private parts removed.
    This task is intended for use by instructors.
    ========================================================================
  -->
  <property name="bld.public" value="${bld.dir}/public" />
  <property name="bld.solution.source" value="${bld.dir}/solution" />
  <property name="bld.solution.html" value="${bld.solution.source}/html" />
  <property name="color.exe" value="..${file.separator}..${file.separator}..${file.separator}util${file.separator}colorize.pl" />
  <property name="hide.exe" value="..${file.separator}..${file.separator}..${file.separator}util${file.separator}hidePrivates.pl" />
  <property name="show.exe" value="..${file.separator}..${file.separator}..${file.separator}util${file.separator}showPrivates.pl" />
  <target name="public" depends="initbuild">
    <mkdir dir="${bld.public}" />
    <apply executable="${hide.exe}" dest="${bld.public}" >
      <arg value="-o"/>
      <targetfile/>
      <srcfile/>
      <fileset dir="."
        includes="**/*.java"
        excludes="${exclude.pat}"
      />
      <mapper type="glob" from="*.java" to="*.java" />
    </apply>
    <copy todir="${bld.public}" >
      <fileset dir="."
        excludes="${exclude.pat},**/build/**,**/*.java"
      />
    </copy>
    <ant dir="${bld.public}" target="test" />
  </target>
  <target name="solution" depends="initbuild">
    <mkdir dir="${bld.solution.source}" />
    <apply executable="${show.exe}" dest="${bld.solution.source}" >
      <arg value="-o"/>
      <targetfile/>
      <srcfile/>
      <fileset dir="."
        includes="**/*.java"
        excludes="${exclude.pat}"
      />
      <mapper type="glob" from="*.java" to="*.java" />
    </apply>
    <copy todir="${bld.solution.source}" >
      <fileset dir="."
        excludes="${exclude.pat},**/build/**,**/*.java"
      />
    </copy>
    <ant dir="${bld.solution.source}" target="test" />
    <mkdir dir="${bld.solution.html}" />
    <apply executable="${color.exe}" dest="${bld.solution.html}" >
      <arg value="-s"/>
      <arg value="java"/>
      <arg value="-o"/>
      <targetfile/>
      <srcfile/>
      <fileset dir="${bld.solution.source}"
        includes="**/*.java"
        excludes="${priv.pat}"
      />
      <mapper type="glob" from="*.java" to="*_java.html" />
    </apply>
  </target>
</project>
