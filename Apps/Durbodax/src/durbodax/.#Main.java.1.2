package durbodax;

import durbodax.commands.CommandUtil;
import durbodax.commands.SampleCommand;
import durbodax.commands.ComputeBplTravel;
import durbodax.commands.GetMarketingTopBottom;
import durbodax.commands.GetMarketingCountsByGroup;
import durbodax.commands.Command;
import durbodax.commands.ComputeInLawTax;
import durbodax.commands.ComputeIncomeTaxSingle;
import durbodax.forms.Form;
import durbodax.forms.FormUtil;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

/**
 *
 * @author Kirk
 */
public class Main {

    
    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
               
        registerCommands();
        registerForms();
       
        try {
            
            System.out.print("Enter command: ");
            String input = br.readLine();
            while(!("quit".equalsIgnoreCase(input))) {
            
                processInput(input);
                
                System.out.print("Enter command: ");
                input = br.readLine();
            }
            
        } catch(IOException e) {
            
            System.out.println(e.getStackTrace());
            System.out.println(e.getMessage());            
        }       
    }
    
    public static void registerCommands() {
        
        CommandUtil.registerCommand("sample", new SampleCommand());
        CommandUtil.registerCommand("ComputeBplTravel", new ComputeBplTravel());
        CommandUtil.registerCommand("GetMarketingTopBottom", new GetMarketingTopBottom());
        CommandUtil.registerCommand("GetMarketingCountsByGroup", new GetMarketingCountsByGroup());
        CommandUtil.registerCommand("ComputeIncomeTaxSingle", new ComputeIncomeTaxSingle());
        CommandUtil.registerCommand("ComputeInLawTax", new ComputeInLawTax());
        
    }

    public static void registerForms() {
        Form sample = new Form();
        sample.addPrompt("Testing");
        FormUtil.registerForm("sample", sample);
        //CommandUtil.registerCommand("ComputeBplTravel", new ComputeBplTravel());
        //CommandUtil.registerCommand("GetMarketingTopBottom", new GetMarketingTopBottom());
        //CommandUtil.registerCommand("GetMarketingCountsByGroup", new GetMarketingCountsByGroup());
        //CommandUtil.registerCommand("ComputeIncomeTaxSingle", new ComputeIncomeTaxSingle());
        //CommandUtil.registerCommand("ComputeInLawTax", new ComputeInLawTax());

    }
    
    public static void processInput(String statement) {        
        
        String[] tokens = statement.split(" ");
        
        if(tokens.length > 0) {

            Form form = FormUtil.getForm(tokens[0]);
            if(form != null) {

                tokens = form.promptUser(br);

            }

            Command command = CommandUtil.getCommand(tokens[0]);
            if(command != null) {
                
                command.execute(tokens);
                
            } else {
                
                System.out.println("Invalid Command!");
                
            }
            
        }
    }
    
}
