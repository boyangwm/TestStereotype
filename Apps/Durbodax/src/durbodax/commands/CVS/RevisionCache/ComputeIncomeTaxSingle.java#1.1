package durbodax.commands;
import durbodax.daos.*;
import durbodax.customers.*;
import durbodax.customers.Enums.*;
import java.text.*;

/**
 *
 * @author fszot
 */
public class ComputeIncomeTaxSingle implements Command{
    private DerbyDAOFactory derbyDAO;
    private CustomerDAO customerDAO;
    private Customer customer;
    private MaritalStatus status;
    private double percent;
    private double total;
    private Double d;

    public ComputeIncomeTaxSingle() {

        derbyDAO = new DerbyDAOFactory();
        customerDAO = derbyDAO.getCustomerDAO();
    }

    public Object execute(String[] params) {

        int id = Integer.parseInt(params[1]);
        if (id <= 0 || id > 88443) {
            throw new IllegalArgumentException("Invalid customer ID");
        }

        customer = customerDAO.selectCustomer(id);

        if(customer.getMaritalStatusEnum() == status.NEVER_MARRIED_OR_SINGLE
                || customer.getMaritalStatusEnum() == status.DIVORCED
                || customer.getMaritalStatusEnum() == status.SEPERATED){
            int income = customer.getTotalPersonalIncome();

            if(income < 8025){
                percent = .10;
                total = (income * percent);
                DecimalFormat df = new DecimalFormat("#.##");
                d = new Double(df.format(total));
                displayOutput(d);
                return d;


            }

            if(income > 8025 && income < 32550){
                percent = .15;
                total = ((income * percent) + 802.50);
                DecimalFormat df = new DecimalFormat("#.##");
                d = new Double(df.format(total));
                displayOutput(d);
                return d;
            }

            if(income > 32550 && income < 78850){
                percent = .25;
                total = ((income * percent) + 4481.25);
                DecimalFormat df = new DecimalFormat("#.##");
                d = new Double(df.format(total));
                displayOutput(d);
                return d;
            }

            if(income > 78850 && income < 164550){
                percent = .28;
                total = ((income * percent) + 16056.25);
                DecimalFormat df = new DecimalFormat("#.##");
                d = new Double(df.format(total));
                displayOutput(d);
                return d;
            }

            if(income > 164550 && income < 357700){
                percent = .33;
                total = ((income * percent) + 40052.25);
                DecimalFormat df = new DecimalFormat("#.##");
                d = new Double(df.format(total));
                displayOutput(d);
                return d;
            }

            if(income > 357700){
                percent = .35;
                total = ((income * percent) + 103791.75);
                DecimalFormat df = new DecimalFormat("#.##");
                d = new Double(df.format(total));
                displayOutput(d);
                return d;
            }

        }
        else{
            if(customer.getMaritalStatusEnum() == status.MARRIED_SPOUSE_PRESENT){

                int income = customer.getTotalPersonalIncome();

                if(income < 16050){
                percent = .10;
                total = (income * percent);
                DecimalFormat df = new DecimalFormat("#.##");
                d = new Double(df.format(total));
                displayOutput(d);
                return d;


            }

            if(income > 16050 && income < 65100){
                percent = .15;
                total = ((income * percent) + 1605);
                DecimalFormat df = new DecimalFormat("#.##");
                d = new Double(df.format(total));
                displayOutput(d);
                return d;
            }

            if(income > 65100 && income < 131450){
                percent = .25;
                total = ((income * percent) + 8962.50);
                DecimalFormat df = new DecimalFormat("#.##");
                d = new Double(df.format(total));
                displayOutput(d);
                return d;
            }

            if(income > 131450 && income < 200300){
                percent = .28;
                total = ((income * percent) + 25550);
                DecimalFormat df = new DecimalFormat("#.##");
                d = new Double(df.format(total));
                displayOutput(d);
                return d;
            }

            if(income > 200300 && income < 357700){
                percent = .33;
                total = (((income * percent) + 44828)*10)/10;
                DecimalFormat df = new DecimalFormat("#.##");
                d = new Double(df.format(total));
                displayOutput(d);
                return d;
            }

            if(income > 357700){
                percent = .35;
                total = ((income * percent) + 96770);
                DecimalFormat df = new DecimalFormat("#.##");
                d = new Double(df.format(total));
                displayOutput(d);
                return d;
            }
            }

        }
        d = new Double(0);
        displayOutput(d);
        return d;
    }

    private void displayOutput(Double d) {

        System.out.println("Income Tax: " +Double.toString(d));

    }

}
